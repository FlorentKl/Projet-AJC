<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		
	<!-- Active les annotations -->
	<context:annotation-config/>
	<aop:aspectj-autoproxy/> <!-- Active annoation aspect pour faire enrobage de code -->
	
	
	<!-- indique dans quels packages sont présent les composants. Si plusieurs packages, format package1, package2, ...
	Scan aussi les sous-packages, puis construit les beans necessaire -->
	<context:component-scan base-package="formationJpaSpring.dao"></context:component-scan>
	
	<!-- Permet d'indiquer un fichier tier properties -->
	<context:property-placeholder location="classpath:config.properties"/> 
	
	<jpa:repositories base-package="formationJpaSpring.repository"></jpa:repositories>


	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<!-- <property name="driverClassName" value="org.postgresql.Driver"/>
		<property name="url" value="jdbc:postgresql://127.0.0.1:5432/jpa"/>
		<property name="username" value="postgres"/>
		<property name="password" value="postgres"/>
		<property name="maxTotal" value="10"/>
		<property name="initialSize" value="5"/>
		
		Remplacés par propriété nommée dans config.properties par ${nom de la propriété}
		-->
		<property name="driverClassName" value="${dataSource.driver}"/>
		<property name="url" value="${dataSource.url}"/>
		<property name="username" value="${dataSource.username}"/>
		<property name="password" value="${dataSource.password}"/>
		<property name="maxTotal" value="10"/>
		<property name="initialSize" value="5"/>
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- Peut aussi etre mis dans property jpaProperties avec <prop key"hibernate.dialect" value = "..." -->
				<property name="databasePlatform" value="${dataSource.dialect}"/>
				<!-- <property name="showSql" value="true"/> -->
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop> <!-- Config show_sql ici ou bien dans property dans HibernateJpaVendorAdapter -->
			</props>
		</property>
		<property name="packagesToScan" value="formationJpaSpring.entity"></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- Meilleur gestion des Exceptions par Spring que Exceptions de base -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"></bean>
	
</beans>